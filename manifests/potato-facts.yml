apiVersion: apps/v1
kind: Deployment
metadata:
  name: potato-facts
  namespace: borealis
  annotations: 
    "app": "potato-facts"
    "prometheus.io/scrape": "true"
spec:
  revisionHistoryLimit: 1
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: potato-facts
  template:
    metadata:
      labels:
        app: potato-facts
      annotations:
        "app": "potato-facts"
        "prometheus.io/scrape": "true"
        linkerd.io/inject: enabled
    spec:
      containers:
#      - image:  armory/potato-facts:v1.6.0 #v1.5.1 #v1.6.0 # v1.7.0
      - image:  index.docker.io/armory/potatofacts:v2 #demoimages/bluegreen:v5 #v5, v4, v3
        imagePullPolicy: Always
        name: potato-facts
        resources:
          limits:
            cpu: "100m" # this is to ensure the above busy wait cannot DOS a low CPU cluster.
            memory: "70Mi"
          requests:
            cpu: "10m" # this is to ensure the above busy wait cannot DOS a low CPU cluster.
            memory: "70Mi"
        env:
        - name: NEW_RELIC_AGENT_ENBALED
          value: 'false'
        - name: APPLICATION_NAME
          value: potatofacts
        - name: APPLICATION_ENVIRONMENT
          value: prod
        - name: APPLICATION_VERSION
          value: "v1.5.1"
        ports:
            - name: http
              containerPort: 9001
            - name: metrics
              containerPort: 3001
        readinessProbe:
            httpGet:
              path: /health/readiness
              port: 9001
              scheme: HTTP
        livenessProbe:
            httpGet:
              path: /health/liveness
              port: 9001
              scheme: HTTP
      restartPolicy: Always


#---
#apiVersion: v1
#kind: Service
#metadata:
#  labels:
#    app: potato-facts
#  name: potato-facts
#  namespace: borealis
#spec:
#  ports:
#  - name: gate-tcp
#    port: 80
#    protocol: TCP
#    targetPort: 8086
#  selector:
#    app: potato-facts
#  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: potato-facts
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: potato-facts
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50











